openapi: 3.0.2
info:
  title: Movies-API
  version: 1.0.0
  description: >-
    ### This is a Swagger UI for our Movies API  \n\n### Error handling\nErrors are presented using the
    HTTP status codes 400-599. The response include a more detailed explanation about the error in the
    body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n###
    Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP
    status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information
    can be found in the response body.\n| 401| The consumer does not have access to the requested resource
    or the provided token is not valid.\n| 404| The requested resource can not be found or the user does
    not have access to the resource.\n| 5XX| A server error has occurred while processing the request.
paths:
  /movies:
    get:
      tags:
        - movies
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List of movies:
                  value:
                    - Indiana Jones
                    - Matrix
          description: Return a list of movies
      summary: Get a list of all movies
      description: Return a list of all movies in API
    post:
      requestBody:
        description: a NEW MOVIE TO BE CREATED
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error"
            examples:
              Creating movie error:
                value:
                  error: It is really requested
              Create new movie:
                value:
                  name: Titanic
                  price: 8.49
        required: true
      tags:
        - new-movie
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/new-movie"
          description: Creates a movie
      summary: Creates a movie
      description: Creates a new movie
  "/movies/{id}":
    get:
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: The user ID.
      tags:
        - details
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                Full details of movies:
                  value:
                    - id: 1
                      name: Indiana Jones
                      price: 19.59
                    - id: 2
                      name: Matrix
                      price: 29.59
                    - id: 3
                      name: Star Wars
                      price: 19.59
                    - id: 4
                      name: Sin City
                      price: 19.59
                    - id: 5
                      name: Who killed Rogger Rabbit
                      price: 19.59
                    - id: 6
                      name: Kill Bill
                      price: 19.59
                    - id: 7
                      name: Pulp Fiction
                      price: 19.59
                    - id: 8
                      name: Saving Private Banner
                      price: 19.59
          description: Return full details of a given id movie
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Movies /w+ was not found:
                  value:
                    error: Movie \w+ was not found in movie array.
          description: Movie was not found in movies array
      summary: Get full details of a movie
      description: Return full details of a given id movie
    delete:
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Insert the movie id that you want to delete.
      tags:
        - deleting
      responses:
        "204": {}
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Movies /w+ was not found:
                  value:
                    error: Movie not found
      summary: Delete movie
      description: Splice the movie from array
  /actors:
    get:
      tags:
        - actors
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List of actors:
                  value:
                    - Humphrey Bogart
                    - Cary Grant
          description: Return a list of actors
      summary: Get a list of all actors
      description: Return a list of all actors in API
    post:
      requestBody:
        description: a NEW ACTOR TO BE CREATED
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error"
            examples:
              Creating movie error:
                value:
                  error: It is really requested
              Create new movie:
                value:
                  actorName: Betty White
                  movieId: 2
        required: true
      tags:
        - new-actor
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/new-actor"
          description: Creates an actor
      summary: Creates na actor
      description: Creates a new actor
  "/actors/{id}":
    get:
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: The user ID.
      tags:
        - details
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                Full details of actors:
                  value:
                    - id: 1
                      actorName: Humphrey Bogart
                      movieId: 1
                    - id: 2
                      actorName: Cary Grant
                      movieId: 2
                    - id: 3
                      actorName: James Stewart
                      movieId: 1
                    - id: 4
                      actorName: Marlon Brando
                      movieId: 2
                    - id: 5
                      actorName: Katharine Hepburn
                      movieId: 2
                    - id: 6
                      actorName: Bette Davis
                      movieId: 2
                    - id: 7
                      actorName: Audrey Hepburn
                      movieId: 2
                    - id: 8
                      actorName: Ingrid Bergman
                      movieId: 1
          description: Return full details of a given id actor
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Movies /w+ was not found:
                  value:
                    error: Actor \w+ was not found in actor array.
          description: Actor was not found in actors array
      summary: Get full details of an actor
      description: Return full details of a given id actor
    delete:
      parameters:
        - in: path
          actorName: id
          type: integer
          required: true
          description: Insert the actor id that you want to delete.
      tags:
        - deleting
      responses:
        "204": {}
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Actors /w+ was not found:
                  value:
                    error: Actor not found
      summary: Delete actor
      description: Splice the actor from array
components:
  schemas:
    error:
      title: Root Type for error
      description: ""
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    new-movie:
      title: Root Type for new-actor
      description: ""
      required:
        - movieId
      type: object
      properties:
        actorName:
          type: string
        movieId:
          format: float
          type: number
          readOnly: false
      example:
        actorName: Titanic
        movieId: 1
    delete-movie:
      title: Root Type for delete-actor
      description: This data type is currently a complex object.
      required:
        - id
      type: object
      properties:
        id:
          type: string
      example:
        id: 1
